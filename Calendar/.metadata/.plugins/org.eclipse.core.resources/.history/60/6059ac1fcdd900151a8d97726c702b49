package br.edu.ifpb.calendarwars.sevlets;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import br.edu.ifpb.calendarwars.db.CalendarYearsDAO;
import br.edu.ifpb.calendarwars.db.PersistenceUtil;
import br.edu.ifpb.calendarwars.entities.Calendar;
import br.edu.ifpb.calendarwars.entities.CalendarGeral;
import br.edu.ifpb.calendarwars.entities.CalendarMounth;
import br.edu.ifpb.calendarwars.entities.CalendarYears;

/**
 * Servlet implementation class Index
 */
@WebServlet("/refresh")
public class refresh extends HttpServlet {
	private static final long serialVersionUID = 1L;
 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		/*
		 * enviar: ano -> ano corrente, 
		 * mounth -> mes corrente, 
		 * days -> dias do mes corrente
		 * */
		String ano = request.getParameter("ano");
		String mounth = request.getParameter("mounth");
		String days = request.getParameter("days");
		
		CalendarYearsDAO  daoYears = new CalendarYearsDAO(PersistenceUtil.getCurrentEntityManager());		
		CalendarYears y = daoYears.findYear(ano);
		
		if(y == null){
			y = new CalendarYears(ano);
			for(int i = 0; i < 12; i++){
				y.set(String.valueOf((i+1)), new CalendarMounth(String.valueOf(i+1)));
			}
			
			//pegando o mes criado (mes corrente criado)
			CalendarMounth m = y.get(mounth);
			m.createDays(Integer.valueOf(days));			
		}
		
		request.setAttribute("mounth", y.get(mounth));
		
		RequestDispatcher r = request.getRequestDispatcher("index.jsp");
		r.forward(request, response);
	}

}
